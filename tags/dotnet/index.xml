<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dotnet on my tech ramblings</title>
    
    
    
    <link>https://www.mytechramblings.com/tags/dotnet/</link>
    <description>Recent content in Dotnet on my tech ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 10 Jul 2024 10:00:57 +0200</lastBuildDate>
    
	<atom:link href="https://www.mytechramblings.com/tags/dotnet/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Code Coverage in .NET</title>
      <link>https://www.mytechramblings.com/posts/code-coverage-in-dotnet/</link>
      <pubDate>Wed, 10 Jul 2024 10:00:57 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/code-coverage-in-dotnet/</guid>
      <description>
        
          
          
          
        
        
        
          This post delves into the current .NET landscape when we aim to collect Code Coverage. We examine the most frequently used tools such as Coverlet, dotCover, and dotnet-coverage, among others. We discuss how to upload a Code Coverage report to a SaaS product like SonarQube. Lastly, we explain how to publish a Code Coverage report into an Azure Pipeline run or a GitHub Action.
          
        
        </description>
    </item>
    
    <item>
      <title>Building an Azure DevOps Copilot using .NET 8, Semantic Kernel and Azure OpenAI GPT-4o</title>
      <link>https://www.mytechramblings.com/posts/building-an-azure-devops-copilot-using-semantic-kernel-and-azure-openai/</link>
      <pubDate>Tue, 28 May 2024 09:35:37 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/building-an-azure-devops-copilot-using-semantic-kernel-and-azure-openai/</guid>
      <description>
        
          
          
          
        
        
        
          This post demonstrates how to create an Azure DevOps Copilot that utilizes a small subset of the Azure DevOps REST API. To achieve this, we will be using Semantic Kernel along with .NET 8 and Azure OpenAI.
          
        
        </description>
    </item>
    
    <item>
      <title>Getting started with OpenTelemetry and distributed tracing in .NET</title>
      <link>https://www.mytechramblings.com/posts/getting-started-with-opentelemetry-and-dotnet-core/</link>
      <pubDate>Tue, 16 Apr 2024 09:30:51 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/getting-started-with-opentelemetry-and-dotnet-core/</guid>
      <description>
        
          
          
          
        
        
        
          OpenTelemetry is a collection of APIs, SDKs, tools, and integrations designed for the creation and management of telemetry data, including traces, metrics, and logs. In today&#39;s post, I&#39;m going to demonstrate how you can begin using OpenTelemetry (OTEL) and distributed tracing with .NET.
          
        
        </description>
    </item>
    
    <item>
      <title>Announcing dotnetramblings.com or how to build a .NET news aggregator site</title>
      <link>https://www.mytechramblings.com/posts/building-a-dotnet-news-aggregator-site/</link>
      <pubDate>Fri, 05 Apr 2024 17:15:12 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/building-a-dotnet-news-aggregator-site/</guid>
      <description>
        
          
          
          
        
        
        
          Let&#39;s check how I build my new site www.dotnetramblings.com. This site is a .NET news aggregator that updates its content every three hours. The main technologies employed to build it include Hugo, Python and Github Actions.
          
        
        </description>
    </item>
    
    <item>
      <title>Building and deploying a .NET 8 App on an ARM64 processor using Azure Pipelines and AWS ECS Fargate. Part 2: Demo</title>
      <link>https://www.mytechramblings.com/posts/building-and-deploying-a-dotnet-app-on-arm64-part2-demo/</link>
      <pubDate>Tue, 02 Apr 2024 22:19:30 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/building-and-deploying-a-dotnet-app-on-arm64-part2-demo/</guid>
      <description>
        
          
          
          
        
        
        
          In this two-part series, I’m going to show you how to build and deploy a .NET 8 app container image that targets an ARM64 processor. In part 2, we will attempt to perform an end-to-end process. This will involve building a .NET 8 API, containerizing the app targeting an ARM64 processor using Azure Pipelines, and deploying it on AWS ECS Fargate. Furthermore, a benchmark will also be conducted to compare the performance of the application running on an ARM64 Fargate container versus an AMD64 Fargate container.
          
        
        </description>
    </item>
    
    <item>
      <title>Building and deploying a .NET 8 App on an ARM64 processor using Azure Pipelines and AWS ECS Fargate. Part 1: How to build multi-platform images</title>
      <link>https://www.mytechramblings.com/posts/building-and-deploying-a-dotnet-app-on-arm64-part1-cross-compilation/</link>
      <pubDate>Tue, 12 Mar 2024 22:00:30 +0100</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/building-and-deploying-a-dotnet-app-on-arm64-part1-cross-compilation/</guid>
      <description>
        
          
          
          
        
        
        
          In this two-part series, I’m going to show you how to build and deploy a .NET 8 app container image that targets an ARM64 processor. In part 1, I’ll be discussing some key concepts that you should know about how to build .NET multi-platform images.
          
        
        </description>
    </item>
    
    <item>
      <title>An opinionated list of tips for building .NET 8 app templates</title>
      <link>https://www.mytechramblings.com/posts/an-opinionated-list-of-tips-for-building-a-dotnet-8-template/</link>
      <pubDate>Thu, 28 Dec 2023 12:03:32 +0100</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/an-opinionated-list-of-tips-for-building-a-dotnet-8-template/</guid>
      <description>
        
          
          
          
        
        
        
          I have been developing .NET templates for quite some time, and as a result, I thought it might be helpful to compile a list of tips to consider when creating a .NET template for your own or your company&#39;s apps.
          
        
        </description>
    </item>
    
    <item>
      <title>Getting started with OpenTelemetry Metrics in .NET 8. Part 2: Instrumenting the BookStore API</title>
      <link>https://www.mytechramblings.com/posts/getting-started-with-opentelemetry-metrics-and-dotnet-part-2/</link>
      <pubDate>Wed, 29 Nov 2023 10:10:55 +0100</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/getting-started-with-opentelemetry-metrics-and-dotnet-part-2/</guid>
      <description>
        
          
          
          
        
        
        
          In this two-part series, I’m going to show you how to use OpenTelemetry to generate custom metrics and how to visualize those metrics using Prometheus and Grafana. In part 2, I’ll demonstrate how to add OpenTelemetry Metrics to a real life .NET 8 app and how to visualize those metrics using Prometheus and Grafana.
          
        
        </description>
    </item>
    
    <item>
      <title>Getting started with OpenTelemetry Metrics in .NET 8. Part 1: Key concepts</title>
      <link>https://www.mytechramblings.com/posts/getting-started-with-opentelemetry-metrics-and-dotnet-part-1/</link>
      <pubDate>Wed, 29 Nov 2023 10:00:55 +0100</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/getting-started-with-opentelemetry-metrics-and-dotnet-part-1/</guid>
      <description>
        
          
          
          
        
        
        
          In this two-part series, I’m going to show you how to use OpenTelemetry to generate custom metrics and how to visualize those metrics using Prometheus and Grafana. In part 1, I’ll be discussing some key concepts that you should know when using OpenTelemetry Metrics with dotnet.
          
        
        </description>
    </item>
    
    <item>
      <title>Analyze Polly Telemetry using Prometheus, Grafana and OpenTelemetry Metrics</title>
      <link>https://www.mytechramblings.com/posts/analyze-polly-telemetry-using-otel-metrics/</link>
      <pubDate>Mon, 30 Oct 2023 10:00:43 +0100</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/analyze-polly-telemetry-using-otel-metrics/</guid>
      <description>
        
          
          
          
        
        
        
          Starting with version 8, Polly provides Telemetry for all built-in strategies. This post will show you how you can send this Telemetry to Prometheus and Grafana for a more in-depth analysis using OpenTelemetry Metrics.
          
        
        </description>
    </item>
    
    <item>
      <title>Back to .NET basics: How to easily build a Strategy pattern using dependency injection</title>
      <link>https://www.mytechramblings.com/posts/dotnet-strategy-pattern-using-dependency-injection/</link>
      <pubDate>Mon, 18 Sep 2023 10:01:54 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/dotnet-strategy-pattern-using-dependency-injection/</guid>
      <description>
        
          
          
          
        
        
        
          In this very brief post, we will see how easy is to build a Strategy pattern in .NET when using dependency injection.
          
        
        </description>
    </item>
    
    <item>
      <title>Back to .NET basics: How to properly use HttpClient</title>
      <link>https://www.mytechramblings.com/posts/dotnet-httpclient-basic-usage-scenarios/</link>
      <pubDate>Thu, 03 Aug 2023 10:21:52 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/dotnet-httpclient-basic-usage-scenarios/</guid>
      <description>
        
          
          
          
        
        
        
          In this post, we will explore a few common scenarios where HttpClient is employed. For each scenario, we will discuss the reasons behind its proper or improper usage, using the help of the netstat command.
          
        
        </description>
    </item>
    
    <item>
      <title>Building a C# enhancing app using Azure OpenAI GPT-4 and Streamlit</title>
      <link>https://www.mytechramblings.com/posts/building-a-csharp-enhancing-app-using-openai-gpt4-and-streamlit/</link>
      <pubDate>Mon, 10 Jul 2023 10:00:01 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/building-a-csharp-enhancing-app-using-openai-gpt4-and-streamlit/</guid>
      <description>
        
          
          
          
        
        
        
          This post demonstrates the simplicity of developing an app that can enhances a C# file using only GenAI&#39;s basic skills. By utilizing Azure OpenAI GPT-4 model, the app can effortlessly add or improve XML comments, provide code explanations, suggest enhancements, and generate unit tests for any given C# file.
          
        
        </description>
    </item>
    
    <item>
      <title>Testing Chiseled Ubuntu container images with .NET</title>
      <link>https://www.mytechramblings.com/posts/testing-chiseled-ubuntu-containers-with-dotnet/</link>
      <pubDate>Mon, 12 Jun 2023 10:03:07 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/testing-chiseled-ubuntu-containers-with-dotnet/</guid>
      <description>
        
          
          
          
        
        
        
          The objective of this post is to test Ubuntu Chiseled images in combination with .NET, evaluating whether it is truly worthwhile to migrate our .NET apps to utilize these base images or not.
          
        
        </description>
    </item>
    
    <item>
      <title>How to integrate your Roslyn Analyzer project with SonarQube</title>
      <link>https://www.mytechramblings.com/posts/how-to-integrate-your-roslyn-analyzers-with-sonarqube/</link>
      <pubDate>Tue, 28 Feb 2023 10:55:55 +0100</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/how-to-integrate-your-roslyn-analyzers-with-sonarqube/</guid>
      <description>
        
          
          
          
        
        
        
          Right now there are 2 ways to add rules from a Roslyn Analyzer project into SonarQube. In this post I want to show you how both options work and also what&#39;re the pros and cons of one over the other.
          
        
        </description>
    </item>
    
    <item>
      <title>5 ways to deploy a .NET Lambda using AWS CDK</title>
      <link>https://www.mytechramblings.com/posts/deploy-dotnet-lambdas-with-aws-cdk/</link>
      <pubDate>Wed, 08 Feb 2023 10:01:46 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/deploy-dotnet-lambdas-with-aws-cdk/</guid>
      <description>
        
          
          
          
        
        
        
          This post is going to walk you through 5 different ways to deploy a .NET lambda using AWS CDK.
          
        
        </description>
    </item>
    
    <item>
      <title>How to modernize a legacy .NET Framework WCF app using CoreWCF and .NET 7</title>
      <link>https://www.mytechramblings.com/posts/modernize-wcf-legacy-app-using-corewcf/</link>
      <pubDate>Mon, 23 Jan 2023 10:01:16 +0100</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/modernize-wcf-legacy-app-using-corewcf/</guid>
      <description>
        
          
          
          
        
        
        
          CoreWCF is a port of the Windows Communication Foundation (WCF) framework to the latest .NET version. The main goal of the CoreWCF project is to enable existing WCF services to be moved to .NET 7. In this post I&#39;ll show you step by step how easy (or hard) is the process of migrating an existing .NET 4.7 WCF app to .NET 7 using the CoreWCF project.
          
        
        </description>
    </item>
    
    <item>
      <title>Trying out the built-in container support for the .NET SDK</title>
      <link>https://www.mytechramblings.com/posts/trying-out-the-built-in-container-support-for-the-dotnet-7-sdk/</link>
      <pubDate>Wed, 30 Nov 2022 10:01:13 +0100</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/trying-out-the-built-in-container-support-for-the-dotnet-7-sdk/</guid>
      <description>
        
          
          
          
        
        
        
          A few months ago the built-in container support for the .NET SDK was announced. In this post I&#39;ll put this feature to test, I&#39;ll try to migrate from an application that contains a rather complex Dockerfile to a new version that has no Dockerfile and instead uses the container support feature.
          
        
        </description>
    </item>
    
    <item>
      <title>Keep your .NET platform images up to date using AWS ECR and Azure Pipelines</title>
      <link>https://www.mytechramblings.com/posts/keep-your-platform-images-updated-when-using-aws-ecr-with-azure-pipelines/</link>
      <pubDate>Thu, 08 Sep 2022 11:06:41 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/keep-your-platform-images-updated-when-using-aws-ecr-with-azure-pipelines/</guid>
      <description>
        
          
          
          
        
        
        
          When talking about containers security on the enterprise one of the best practices is to use your own platform images, those platform images are the base for your company applications. In this post I&#39;m going to show you an opinionated implementation of how to automate the creation and update of your own .NET platform images using Azure Pipelines and AWS ECR.
          
        
        </description>
    </item>
    
    <item>
      <title>How to easily check on your CI/CD pipelines if your app has a NuGet package with a security vulnerability</title>
      <link>https://www.mytechramblings.com/posts/check-if-your-dotnet-app-dependencies-has-a-security-vulnerability-on-you-cicd-pipelines/</link>
      <pubDate>Tue, 09 Aug 2022 10:01:21 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/check-if-your-dotnet-app-dependencies-has-a-security-vulnerability-on-you-cicd-pipelines/</guid>
      <description>
        
          
          
          
        
        
        
          Almost any dotnet application has several NuGet dependencies, and those dependencies may have their own dependencies, and so on and so forth. What if any of those dependencies you&#39;re using contains a security vulnerability? You can check on your CI/CD pipeline if your application has any known NuGet vulnerability with just a couple of lines of bash script.
          
        
        </description>
    </item>
    
    <item>
      <title>How to deploy a SignalR Core application to AWS</title>
      <link>https://www.mytechramblings.com/posts/deploying-a-signalr-core-app-on-aws/</link>
      <pubDate>Tue, 19 Jul 2022 10:00:40 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/deploying-a-signalr-core-app-on-aws/</guid>
      <description>
        
          
          
          
        
        
        
          This post is about which AWS services can be used and how to set them up properly when you want to deploy a SignalR Core application to AWS.
          
        
        </description>
    </item>
    
    <item>
      <title>Linting a .NET 6 app Dockerfile using Hadolint, dockerfile_lint and Azure Pipelines</title>
      <link>https://www.mytechramblings.com/posts/linting-a-dotnet-app-dockerfile-using-hadolint-dockerfile-lint-and-azure-pipelines/</link>
      <pubDate>Mon, 16 May 2022 10:05:01 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/linting-a-dotnet-app-dockerfile-using-hadolint-dockerfile-lint-and-azure-pipelines/</guid>
      <description>
        
          
          
          
        
        
        
          Like any other language, Dockerfiles can and should be linted for updated best practices and code quality checks. In this post I will show you how to incorporate a couple of Dockerfile linters into our Secure DevOps workflow to ensure our Dockerfiles are always readable, understandable and maintainable.
          
        
        </description>
    </item>
    
    <item>
      <title>Profiling a .NET6 app running on AWS ECS Fargate with dotnet-monitor</title>
      <link>https://www.mytechramblings.com/posts/profiling-a-net-app-on-aws-ecs-fargate-with-dotnet-monitor/</link>
      <pubDate>Wed, 30 Mar 2022 10:25:20 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/profiling-a-net-app-on-aws-ecs-fargate-with-dotnet-monitor/</guid>
      <description>
        
          
          
          
        
        
        
          The dotnet-monitor tool is an alternative to the .NET CLI diagnostic tools. In this post I&#39;ll show you how to deploy a .NET 6 application into AWS ECS Fargate with dotnet-monitor as a sidecar container, and afterwards how you can profile an app using the dotnet-monitor HTTP API.
          
        
        </description>
    </item>
    
    <item>
      <title>Profiling a .NET6 app running in a linux container with dotnet-trace, dotnet-dump, dotnet-counters, dotnet-gcdump and Visual Studio</title>
      <link>https://www.mytechramblings.com/posts/profiling-a-net-app-with-dotnet-cli-diagnostic-tools/</link>
      <pubDate>Tue, 01 Mar 2022 10:01:37 +0100</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/profiling-a-net-app-with-dotnet-cli-diagnostic-tools/</guid>
      <description>
        
          
          
          
        
        
        
          This post contains a few practical examples showing you how to profile a .NET6 application running in a linux container using the .NET CLI diagnostic tools (dotnet-trace, dotnet-dump, dotnet-counters and dotnet-gcdump) and Visual Studio.
          
        
        </description>
    </item>
    
    <item>
      <title>Getting started with AWS Distro for OpenTelemetry and distributed tracing using .NET. Part 2: Building the demo</title>
      <link>https://www.mytechramblings.com/posts/getting-started-with-aws-distro-for-otel-and-dotnet-part-2/</link>
      <pubDate>Tue, 01 Feb 2022 10:00:12 +0100</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/getting-started-with-aws-distro-for-otel-and-dotnet-part-2/</guid>
      <description>
        
          
          
          
        
        
        
          This is a 2 part-series post. In part 2 I’ll show you how to build and configure properly a few distributed .NET apps that will send traces to the AWS OTEL Collector, and also how to analyze those traces in AWS X-Ray.
          
        
        </description>
    </item>
    
    <item>
      <title>Getting started with AWS Distro for OpenTelemetry and distributed tracing using .NET. Part 1: Setting up the AWS OTEL Collector</title>
      <link>https://www.mytechramblings.com/posts/getting-started-with-aws-distro-for-otel-and-dotnet-part-1/</link>
      <pubDate>Mon, 31 Jan 2022 10:10:12 +0100</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/getting-started-with-aws-distro-for-otel-and-dotnet-part-1/</guid>
      <description>
        
          
          
          
        
        
        
          This is a 2 part-series post. In part 1 I’ll be talking about what is the AWS OpenTelemetry Collector and how to set it up for ingesting and exporting traces to AWS X-Ray.
          
        
        </description>
    </item>
    
    <item>
      <title>Setting up the SonarQube scanner when building a .NET Core container image</title>
      <link>https://www.mytechramblings.com/posts/running-a-sonarqube-scan-when-building-docker-image/</link>
      <pubDate>Tue, 14 Sep 2021 10:05:00 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/running-a-sonarqube-scan-when-building-docker-image/</guid>
      <description>
        
          
          
          
        
        
        
          If you&#39;re using containers quite probably you&#39;re doing the build, test and analysis steps inside the Dockerfile, and setting up the SonarQube scanner when building the image can be a little more cumbersome than usual, and that&#39;s why I wanted to write a little bit about it.
          
        
        </description>
    </item>
    
    <item>
      <title>Securing a graphQL API with Azure Active Directory</title>
      <link>https://www.mytechramblings.com/posts/securing-dotnet-graphql-api-with-aad/</link>
      <pubDate>Tue, 24 Aug 2021 10:21:33 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/securing-dotnet-graphql-api-with-aad/</guid>
      <description>
        
          
          
          
        
        
        
          In today&#39;s post I want to talk about how you can secure a .NET graphQL API that uses HotChocolate (https://chillicream.com/) with Azure Active Directory.
          
        
        </description>
    </item>
    
    <item>
      <title>Some common gotchas when trying to deploy a dotnet gRPC app to AWS ECS</title>
      <link>https://www.mytechramblings.com/posts/some-gotchas-when-deploying-a-dotnet-grpc-app-to-ecs/</link>
      <pubDate>Wed, 21 Jul 2021 10:05:32 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/some-gotchas-when-deploying-a-dotnet-grpc-app-to-ecs/</guid>
      <description>
        
          
          
          
        
        
        
          Lately I&#39;ve been deploying a sizable amount of gRPC services to AWS ECS so I thought it might be useful to talk a little bit about some gotchas I have encountered. Some of the problems I&#39;ll be talking about on this post are specific of the .NET implementation of gRPC and another ones are from the AWS side.
          
        
        </description>
    </item>
    
    <item>
      <title>How to build a .NET template and use it within Visual Studio. Part 2: Creating a template package</title>
      <link>https://www.mytechramblings.com/posts/create-dotnet-templates-for-visual-studio-part-2/</link>
      <pubDate>Thu, 17 Jun 2021 10:01:29 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/create-dotnet-templates-for-visual-studio-part-2/</guid>
      <description>
        
          
          
          
        
        
        
          This is a 2 part-series post. In part 2 I&#39;ll show you how to convert a few .NET apps into .NET templates, package them together in a single NuGet pack and use them as templates within Visual Studio.
          
        
        </description>
    </item>
    
    <item>
      <title>How to build a .NET template and use it within Visual Studio. Part 1: Key concepts</title>
      <link>https://www.mytechramblings.com/posts/create-dotnet-templates-for-visual-studio-part-1/</link>
      <pubDate>Mon, 14 Jun 2021 00:07:29 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/create-dotnet-templates-for-visual-studio-part-1/</guid>
      <description>
        
          
          
          
        
        
        
          This is a 2 part-series post. In part 1 I&#39;ll be talking about a few key concepts that you should know when creating a .NET template.
          
        
        </description>
    </item>
    
    <item>
      <title>How to configure your custom roslyn analyzer using an .editorconfig file</title>
      <link>https://www.mytechramblings.com/posts/configure-roslyn-analyzers-using-editorconfig/</link>
      <pubDate>Thu, 14 Jan 2021 12:59:43 +0100</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/configure-roslyn-analyzers-using-editorconfig/</guid>
      <description>
        
          
          
          
        
        
        
          Roslyn Analyzers are extensions that analyze source code and report violations. Some analyzers are built-into VS and some are third party ones which can be installed (like StyleCopyAnalyzers, FxCopAnalyzers, etc.). On today&#39;s post I will show you how you can configure your custom roslyn analyzers with an .editorconfig file.
          
        
        </description>
    </item>
    
    <item>
      <title>How to centrally manage NuGet package versions within your solution</title>
      <link>https://www.mytechramblings.com/posts/centrally-manage-nuget-versions/</link>
      <pubDate>Wed, 02 Sep 2020 10:01:20 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/centrally-manage-nuget-versions/</guid>
      <description>
        
          
          
          
        
        
        
          In this post I want to show you some of the different options available when you want to centrally manage NuGet versions within a solution.
          
        
        </description>
    </item>
    
    <item>
      <title>Why and how you should add a healthcheck endpoint to your Wcf legacy applications</title>
      <link>https://www.mytechramblings.com/posts/how-to-add-healthchecks-to-wcf-apps/</link>
      <pubDate>Sat, 04 Jul 2020 17:30:06 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/how-to-add-healthchecks-to-wcf-apps/</guid>
      <description>
        
          
          
          
        
        
        
          What I wanted to talk in these post is how easy is to add a healthcheck endpoint in a WCF application, and how you can use it in case you want to move the application into the Cloud in the near future.
          
        
        </description>
    </item>
    
    <item>
      <title>Enforce the use of a specific .NET Core version using Roslyn</title>
      <link>https://www.mytechramblings.com/posts/enforce-your-dotnet-apps-framework-version-using-roslyn-analyzers/</link>
      <pubDate>Wed, 24 Jun 2020 15:25:42 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/enforce-your-dotnet-apps-framework-version-using-roslyn-analyzers/</guid>
      <description>
        
          
          
          
        
        
        
          In these past few years Microsoft has kept a steady flow of new .NET Core versions, and if you have hundreds of applications in your company it&#39;s almost impossible to keep them updated to the most recent version of the framework. If you want to enforce that everyone on your company is using the correct framework version when they create a new application you can use a Roslyn Analyzer.
          
        
        </description>
    </item>
    
  </channel>
</rss>